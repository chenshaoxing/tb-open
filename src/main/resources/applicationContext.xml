<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <context:component-scan base-package="com.taobao">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>

    <!--要调度的对象-->
    <bean id="scanRateTask" class="com.taobao.task.ScanAboutOverRateTask" />
    <bean id="deleteHistoryRateLogTask" class="com.taobao.task.DeleteHistoryAutoRateLogTask" />
    <bean id="scanUserOverDateTask" class="com.taobao.task.ScanUserOverDateTask"/>
    <bean id="scanJDProductInfoTask" class="com.taobao.task.ScanJDProductInfoTask"/>

    <bean id="scanJDProductInfoDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="scanJDProductInfoTask" />
        <property name="targetMethod" value="scan" />
        <!--将并发设置为false-->
        <property name="concurrent" value="false" />
    </bean>

    <bean id="scanUserOverDateDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="scanUserOverDateTask" />
        <property name="targetMethod" value="scan" />
        <!--将并发设置为false-->
        <property name="concurrent" value="false" />
    </bean>

    <bean id="scanDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="scanRateTask" />
        <property name="targetMethod" value="scan" />
        <!--将并发设置为false-->
        <property name="concurrent" value="false" />
    </bean>

    <bean id="deleteDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="deleteHistoryRateLogTask" />
        <property name="targetMethod" value="delete" />
        <!--将并发设置为false-->
        <property name="concurrent" value="false" />
    </bean>

    <bean id="triggerScanJDProductInfo" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="scanJDProductInfoDetail" />
        <property name="cronExpression" value="50 * * * * ?" />
        <!--<property name="cronExpression" value="30 * * * * ?" />-->
    </bean>

    <bean id="triggerScanUserOverDate" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="scanUserOverDateDetail" />
        <property name="cronExpression" value="0 0 8 * * ?" />
        <!--<property name="cronExpression" value="30 * * * * ?" />-->
    </bean>

    <bean id="triggerScan" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="scanDetail" />
        <property name="cronExpression" value="0 10/30 * * * ?" />
    </bean>

    <bean id="triggerDelete" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="deleteDetail" />
        <property name="cronExpression" value="0 0 23 * * ?" />
    </bean>

    <!--&lt;!&ndash;  总管理类如果将lazy-init='false'那么容器启动就会执行调度程序   &ndash;&gt;-->
    <bean id="startQuertz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false" >
        <property name="triggers">
            <list>
                <!--作业调度器,list下可加入其他的调度器-->
                <ref bean="triggerScan" />
                <ref bean="triggerDelete" />
                <ref bean="triggerScanUserOverDate" />
                <ref bean="triggerScanJDProductInfo" />
            </list>
        </property>
    </bean>

    <bean id="taoBaoClient"  class="com.taobao.api.DefaultTaobaoClient">
        <constructor-arg name="serverUrl" value="${mvn.app.url}"></constructor-arg>
        <constructor-arg name="appKey" value="${mvn.app.key}"></constructor-arg>
        <constructor-arg name="appSecret" value="${mvn.app.secret}"></constructor-arg>
    </bean>

    <bean id="onlineEmailService" class="com.taobao.service.OnlineEmailService" init-method="init">
        <property name="mailServerHost" value="${mvn.email.server.host}"/>
        <property name="mailServerPort" value="${mvn.email.server.port}"/>
        <property name="userName" value="${mvn.email.username}"/>
        <property name="password" value="${mvn.email.password}"/>
    </bean>


    <!--<bean	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:important.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <!--<property name="url" value="${mvn.jdbc_url}" />-->
        <property name="url" value="jdbc:mysql://10.211.55.4:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true" />
        <!--<property name="url" value="jdbc:mysql://sqld.duapp.com:4050/eBdYFaVHDRBXyIkrimel?autoReconnect=true"/>-->
        <property name="username" value="${mvn.jdbc_username}" />
        <!--<property name="username" value="KHRdaNSHIU1AvMVoIc7EEU1C" />-->
        <property name="password" value="${mvn.jdbc_password}" />
        <!--<property name="password" value="RdgWkOmLn1lsDWr50Evu8sV2sidhNB45" />-->

    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <!--  配置Hibernate拦截器,用于同步索引-->
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--<prop key="hibernate.show_sql">true</prop>-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <property name="packagesToScan" value="com.taobao.entity" />

    </bean>

    <bean id="sessionKeyService" class="com.taobao.service.SessionKeyService">
        <property name="appKey" value="${mvn.app.key}"/>
        <property name="secret" value="${mvn.app.secret}"/>
        <property name="refreshUrl" value="${mvn.session.refresh.url}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!--使用annotation定义事务，这句不加貌似也可以-->

    <tx:annotation-driven transaction-manager="transactionManager" />

    <aop:aspectj-autoproxy />


    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="velocimacro.library"></prop>
                <prop key="input.encoding">utf-8</prop>
                <prop key="output.encoding">utf-8</prop>
            </props>
        </property>
    </bean>

</beans>